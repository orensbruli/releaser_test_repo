# A list of files that we know that contain the version number.
# It does not have to be complete.
# It's used to find the current version number in the files.
# It also checks that at least this list of files has the same version number.
KNOWN_VERSIONED_FILES:
  - .env

# A list of file patterns that we know that contain the version number.
# Currently, it matches if the end of the path matches the pattern.
VERSIONED_FILES_PATTERNS:
  - ".env"
  - "package.xml"
  - "setup.py"
  - "package.json"

# It's used to find the current version number in the files.
VERSION_NUMBER_REGEX: "(([0-9]+)\\.([0-9]+)\\.([0-9]+))"

steps:
  branch_release:
    type: branch
    from_branch: main
    to_branch: v{version.major}.{version.minor}
    message: Branch the release from main as `v{version.major}.{version.minor}`
    push: true
  version_bump_pr:
    type: pull_request
    from_branch: main
    to_branch: version-bump-{version.major}.{version.minor}
    replace_version:
      files: [ .env, package.json]
      old_version: "{version}"
      # if empty, it will bump the minor version
      new_version: ""
    message: >
      Bump Moveit Studio to version `{version.major}.{version.minor+1}.0`
  sanity_check_installs:
    type: manual
    message: |
      NOT AUTOMATED STEP. TAKE YOUR TIME TO DO IT RIGHT
      - Sanity check installs for both the arm64 and x86 releases
      - Have MacOS users and Linux Users run through the install process
    wait_input_done: true